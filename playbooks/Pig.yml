- hosts: Pig
  become: true


  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Radarr container
      docker_container:
        name: Radarr
        image: lscr.io/linuxserver/radarr
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
        volumes:
          - /NVMe/Docker/Radarr:/config
          - /Data/Media/Movies:/movies
          - /Data/Downloads:/downloads
        ports:
          - "7878:7878"

    - name: Sonarr container
      docker_container:
        name: Sonarr
        image: lscr.io/linuxserver/sonarr
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
        volumes:
          - /NVMe/Docker/Sonarr:/config
          - /Data/Media/TV:/tv
          - /Data/Downloads:/downloads
        ports:
          - "8989:8989"
        pull: true

    - name: Jackett container
      docker_container:
        name: Jackett
        image: lscr.io/linuxserver/jackett
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
        volumes:
          - /NVMe/Docker/Jackett:/config
        ports:
          - "9117:9117"
        pull: true
        
    - name: Ombi container
      docker_container:
        name: Ombi
        image: lscr.io/linuxserver/ombi
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
        volumes:
          - /NVMe/Docker/OMBI:/config
        ports:
          - "3579:3579"
        pull: true

    - name: Linarr container
      docker_container:
        name: Linarr
        image: lscr.io/linuxserver/lidarr:latest
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
        volumes:
          - /NVMe/Docker/Linarr:/config
          - /Data/Downloads:/downloads
          - /Data/Media/Music:/music
        ports:
          - "8686:8686"
        pull: true
  
    - name: Overseerr container
      docker_container:
        name: Overseerr
        image: lscr.io/linuxserver/overseerr
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
        volumes:
          - /NVMe/Docker/Overseerr:/config
        ports:
          - "5055:5055"
        pull: true

    - name: Prowlarr container
      docker_container:
        name: Prowlarr
        image: lscr.io/linuxserver/prowlarr:latest
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
        volumes:
          - /NVMe/Docker/prowlarra:/config
        ports:
          - "9696:9696"
        pull: true

    - name: container Watchtower
      docker_container:
        name: Watchtower
        image: containrrr/watchtower
        state: started
        restart_policy: always
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
        command: --cleanup
        pull: true

    - name: container Heimdall
      docker_container:
        name: Heimdall
        image: lscr.io/linuxserver/heimdall
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
        ports:
          - "80:8080"
          - "443:4443"
        volumes:
          - /NVMe/Docker/Heimdall:/config
        pull: true
          
    - name: container Guacamole
      docker_container:
        name: Guacamole
        image: lscr.io/linuxserver/guacd:latest
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
        ports:
          - "4822:4822 "
        volumes:
          - /NVMe/Docker/Guacamole:/config
        pull: true

    - name: container Bookstack
      docker_container:
        name: Bookstack
        image: lscr.io/linuxserver/bookstack
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
        ports:
          - "6875:6875"
        volumes:
          - /NVMe/Docker/Bookstack:/config
        pull: true

    - name: container Surfshark
      docker_container:
        name: Surfshark
        image: qmcgaw/gluetun:latest
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
          VPN_SERVICE_PROVIDER: "surfshark"
          VPN_TYPE: "wireguard"
          WIREGUARD_PRIVATE_KEY: "SAduTTn+OWGokQ7ygwTLbUXdk3Or/OCscvhWEPCiwE8="
          WIREGUARD_ADDRESSES: "10.14.0.2/16"
          SERVER_COUNTRIES: "Netherlands"
        ports: 9091:9091
        capabilities:
          - NET_ADMIN
        devices :
          - /dev/net/tun:/dev/net/tun
        pull: true

    - name: container Transmission
      docker_container:
        name: Transmission
        image: lscr.io/linuxserver/transmission
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
        volumes:
          - /NVMe/Docker/Transmission:/config
          - /Data/Downloads:/downloads
        network_mode: container:Surfshark
        pull: true

    - name: container Plex
      docker_container:
        name: plex
        image: plexinc/pms-docker
        state: started
        restart_policy: unless-stopped
        env:
          TZ: "Europe/London"
          PLEX_CLAIM: "claim-oZzSS47tJhLYgfZFzFtm"
          PUID: "1000"
          PGID: "1000"
        ports:
          - "32400:32400"
          - "3005:3005"
          - "8324:8324"
          - "32469:32469"
          - "1900:1900"
          - "32410:32410"
          - "32412:32412"
          - "32413:32413"
          - "32414:32414"
        hostname: "Plex"
        volumes:
          - /NVMe/Docker/Plex:/config
          - /NVMe/Plex/transcode:/transcode
          - /Data/Media:/data
        pull: true

    - name: container Resilio Sync
      docker_container:
        name: resilio-sync
        image: lscr.io/linuxserver/resilio-sync:latest
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Etc/UTC"
        ports:
          - "8888:8888"
          - "55555:55555"
        volumes:
          - /NVMe/Docker/Sync:/config
          - /Data:/Data
          - /Data:/sync
        pull: true
  
    - name: Emby container
      docker_container:
        name: Emby
        image: lscr.io/linuxserver/emby:latest
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
          NVIDIA_DRIVER_CAPABILITIES: "all"
          NVIDIA_VISIBLE_DEVICES: "all"
        runtime: "nvidia"

        ports:
          - "8096:8096"
          - "8920:8920"
        volumes:
          - /NVMe/Docker/emby:/config
          - /Data/Media:/Media
          - /NVMe:/NVMe/Emby
        pull: true
        
    - name: container CloudFlare
      docker_container:
        name: CloudFlare
        image: cloudflare/cloudflared:latest
        state: started
        restart_policy: unless-stopped
        command: tunnel --no-autoupdate run --token eyJhIjoiNjA1ZmUyODQ5YzM1N2JhNzM1YmY3MWQzNWNlNDhjMzciLCJ0IjoiM2U3OTFkNzktYzM5YS00MGUwLTg2OTctNjkwMmE2YTk0MWQ3IiwicyI6Ik1EQm1ZalV6WmprdFl6STNOaTAwWVdJNExUbGlNVEV0TVRZMU4yUTJNREUzT0dKbSJ9
        pull: true
